@using System.Collections
@using System.Web.UI.WebControls
@using Chat.ViewModel
@{
    IEnumerable<Chat.Models.User> users = ViewData["Users"] as IEnumerable<Chat.Models.User>;
    IEnumerable<Chat.Models.Message> messages = ViewData["Messages"] as IEnumerable<Chat.Models.Message>;
    MessageViewModel messageViewModel = ViewData["MessageViewModel"] as MessageViewModel;
}

@{
    ViewBag.Title = "Chat";
}

<h2>Chat</h2>


<div class="row">
    <div class="col-md-9">
        <table class="table">
            @foreach (var item in messages)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Time)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author):
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                </tr>
            }
        </table>
</div>

    <div class="col-md-3">

        <p>Никнэйм:</p>
        <input value=@messageViewModel.NickName id="nickNameInput" name="nickNameInput" onblur="sendFunction"/>

        <script type="text/javascript">
            function sendFunction() {
                var nickName = {
                    nick: $('#nickNameInput').val()
                };
                $.ajax({
                    url: @Url.RequestContext,
                    type: "POST",
                    data: nickName
                    
            });

            }
        </script>

        <table class="table">
            <tr>
                <td>
                    Онлайн:
                </td>
            </tr>
            @foreach (var item in users)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                </tr>
            }

        </table>
    </div>
</div>
<hr/>

<div id="message">
    @using (Html.BeginForm())
    {
        @Html.TextBoxFor(a=>messageViewModel.MessageText)
        <input type="submit" value="Send"/>
    }
</div>